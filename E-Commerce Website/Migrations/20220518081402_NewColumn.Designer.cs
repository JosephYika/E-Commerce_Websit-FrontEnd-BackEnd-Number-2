// <auto-generated />
using System;
using E_Commerce_Website.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace E_Commerce_Website.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220518081402_NewColumn")]
    partial class NewColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AuthorPianoCourse", b =>
                {
                    b.Property<int>("AuthorsId")
                        .HasColumnType("int");

                    b.Property<int>("PianoCoursesId")
                        .HasColumnType("int");

                    b.HasKey("AuthorsId", "PianoCoursesId");

                    b.HasIndex("PianoCoursesId");

                    b.ToTable("AuthorPianoCourse");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.Author_Course", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("PianoCourseId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "PianoCourseId");

                    b.HasIndex("PianoCourseId");

                    b.ToTable("AuthorsCourses");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("PianoCourseId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("PianoCourseId");

                    b.ToTable("OrederItems");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.PianoCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseCategory")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PianoCourses");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("PianoCourseId")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PianoCourseId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("AuthorPianoCourse", b =>
                {
                    b.HasOne("E_Commerce_Website.Models.Author", null)
                        .WithMany()
                        .HasForeignKey("AuthorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Website.Models.PianoCourse", null)
                        .WithMany()
                        .HasForeignKey("PianoCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Commerce_Website.Models.Author_Course", b =>
                {
                    b.HasOne("E_Commerce_Website.Models.Author", "Author")
                        .WithMany("Authors_Courses")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Website.Models.PianoCourse", "PianoCourse")
                        .WithMany("Authors_Courses")
                        .HasForeignKey("PianoCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("PianoCourse");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.OrderItem", b =>
                {
                    b.HasOne("E_Commerce_Website.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Commerce_Website.Models.OrderItem", null)
                        .WithMany("Orderitems")
                        .HasForeignKey("OrderItemId");

                    b.HasOne("E_Commerce_Website.Models.PianoCourse", "PianoCourse")
                        .WithMany()
                        .HasForeignKey("PianoCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("PianoCourse");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("E_Commerce_Website.Models.PianoCourse", "PianoCourse")
                        .WithMany()
                        .HasForeignKey("PianoCourseId");

                    b.Navigation("PianoCourse");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.Author", b =>
                {
                    b.Navigation("Authors_Courses");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.OrderItem", b =>
                {
                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("E_Commerce_Website.Models.PianoCourse", b =>
                {
                    b.Navigation("Authors_Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
